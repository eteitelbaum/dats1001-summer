{
  "hash": "a4b188b645e7f799500516d791a1c9bc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module 4.3\"\nsubtitle: \"Dealing with Outliers\"\nformat: \n  html:\n    code-link: true\nhighlight-style: atom-one\nexecute: \n  echo: true\n  message: false\n  warning: false\n---\n\n::: {.callout-tip}\n## Prework\n\nRun this code chunk to load the necessary packages and data for this module:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(vdemlite)\n\n# Load V-Dem data for 2019\nmodel_data <- fetchdem(\n  indicators = c(\n  \"v2x_libdem\", \n  \"e_gdppc\", \n  \"v2cacamps\"),\n  start_year = 2019, \n  end_year = 2019\n  ) |>\n  rename(\n    country = country_name, \n    lib_dem = v2x_libdem, \n    wealth = e_gdppc,\n    polarization = v2cacamps\n    ) |>\n  filter(!is.na(lib_dem), !is.na(wealth))\n```\n:::\n\n:::\n\n## Overview\n\nRemember those wealthy but undemocratic countries (like Saudi Arabia and UAE) that appeared as outliers in our GDP-democracy analysis? In this module, we'll learn systematic approaches for identifying and handling such outliers. You'll discover that outliers aren't always \"bad\" data points to removeâ€”sometimes they represent the most interesting cases in your analysis! \n\nWe will explore a number of key strategies for dealing with outliers once identified, helping you make informed decisions for your own projects. By the end of this module, you'll have a toolkit for handling outliers in your regression analyses and understand when each approach is most appropriate.\n\n{{< video https://youtu.be/OYwq0MlY11g?si=YV1JVOTqTLUJgk0U title = 'What Should You Do with Outliers?'>}}\n\n## What Are Outliers and Why Do They Matter?\n\nLet's start by revisiting our democracy and GDP analysis from Module 4.1. Remember this plot?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n\n# Create custom tooltip\nmodel_data <- model_data |>\n  mutate(\n    tooltip = paste0(\n      \"Country: \", country,\n      \"<br>Wealth: \", scales::label_dollar(suffix = \"k\")(wealth),\n      \"<br>Democracy: \", lib_dem\n      )\n    )\n\n# Create the scatter plot with log transformation on GDP\nplot <- ggplot(model_data, aes(x = wealth, y = lib_dem, text = tooltip)) +\n  geom_point() +\n  scale_x_log10(labels = scales::label_dollar(suffix = \"k\")) +\n  labs(x = \"GDP per Capita\", \n       y = \"Liberal Democracy Score\",\n       title = \"Wealth and Democracy Around the World\") +\n  theme_minimal()\n\n# Plotlify it\nggplotly(plot, tooltip = \"text\") |>\n    config(displayModeBar = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f00ea218257a9a070f64\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f00ea218257a9a070f64\">{\"x\":{\"data\":[{\"x\":[1.2256710430811442,1.0701117827822002,1.6884554184522125,1.7490402687034572,0.74880800495860222,1.0548045002209547,1.5917433574598405,0.75534118381154758,1.4083417411546548,1.0521165505499981,0.93267665862240068,0.17318626841227402,1.1353235081066773,1.4358443659844413,1.0702965181977651,1.7827663544132619,1.4595884792320082,0.72713442376048865,0.61804809671209271,0.7897921677306754,0.21906033244886131,0.68699356626467856,0.38810120157051664,0.65934563574617699,1.0388982121145325,0.50609895992844045,1.336959785120704,0.69810054562338997,0.84267163376078846,0.24179543129519873,1.2182203041755453,0.32407657973948639,0.83180580867439102,0.52943035436698593,0.25358028956218281,1.6126461317557277,0.88694170598341537,1.0117818305481068,0.61637047229126951,0.87806198129001256,0.39005149645898729,1.6970374433691429,1.2293234078961834,0.31638975107319545,0.07554696139253074,0.46254772880266409,1.0587296207517201,0.35888620440586905,0.62675085368339323,1.0187420957623821,0.20736503746907187,0.43695733066944958,0.68042617085814538,0.076276255404217605,0.46119828862249318,0.49290001110870341,0.4237372499823292,0.58804749698608272,0.57599562020326767,1.6707003252319739,1.6818470174042197,1.1788331173591167,-0.13371266091580511,0.81117269506655432,-0.082494490447453356,1.366329550519106,1.2429635918214832,0.54369563230924478,0.99791036734674343,1.6090498660475809,1.6581736302239891,0.85321133450331699,0.98891552051268672,0.99060521142391944,1.8777570860541808,1.5285953576940683,0.86266795022858789,1.4404840208233987,0.48699688843182259,0.074816440645174717,0.11627558758054428,1.1680847961406828,0.96955568422084359,0.90243805619866502,1.694157513347289,1.3975924340381167,0.60584353905808919,1.9041202134761996,0.22349594096239453,1.5574470461493592,0.63164666295841954,1.0357898331277571,1.372893600271661,1.0032019465216924,1.6130168302836816,1.3207277266441733,1.0650566033560185,0.73174988352726344,1.0903638794717181,1.1522883443830565,1.3181885941517959,0.48043814717781713,0.23477029516091652,1.1870692712304234,-0.039529222465701036,0.48472680429866183,0.79042591739111068,1.1972529829973899,1.3234171213504193,1.0416689664756102,0.35621713421973517,1.1060548400937864,0.21404867941194144,0.87846434534146889,1.3770693648196528,0.69897000433601886,0.79455775125476158,1.0655797147284485,0.11627558758054428,0.9176630243273749,0.96997473012171509,0.36679638328672992,0.23401081758717934,1.099507993727965,0.95458016274375734,0.57229060615141758,0.25623653320592293,1.4477005604345132,1.3984434983034844,1.0292213942539279,1.664585570012582,1.4777866629092395,1.2523432243800858,1.6454419202385278,1.0786380383696725,1.3010734229408438,0.43280900503316827,1.3699946616084282,0.95400116768157017,1.4959603948817051,1.5566401540717196,1.6856163571494998,1.3237881899007506,1.498462185706233,1.0220982974611403,1.6096690971852434,1.3943641126271287,1.0424573745743209,1.7367867934493351,1.5915431807515372,1.6533090129384789,1.5022222157664757,1.9656202664183426,1.137923512040415,1.4193774051391275,1.6061770696622117,1.3979921208831958,1.2213098902969297,1.5794405971397971,1.7529621946243312,1.3370597263205246,0.98145616652212664,1.2945323573418699,0.52724311638808863,1.5219614158002237,1.1497424147134043,1.4674601095072639,1.8574832669524506,1.4904922351216439,1.5513035818962273,0.3979400086720376,0.50974001557038229,1.8104207163063415,1.4121916552415692],\"y\":[0.434,0.57999999999999996,0.871,0.86599999999999999,0.61499999999999999,0.60699999999999998,0.755,0.26000000000000001,0.105,0.432,0.11899999999999999,0.040000000000000001,0.50700000000000001,0.50700000000000001,0.53600000000000003,0.73699999999999999,0.81999999999999995,0.40100000000000002,0.096000000000000002,0.253,0.23300000000000001,0.23400000000000001,0.32000000000000001,0.23899999999999999,0.69699999999999995,0.57299999999999995,0.062,0.075999999999999998,0.121,0.184,0.63100000000000001,0.159,0.32500000000000001,0.39500000000000002,0.014999999999999999,0.78300000000000003,0.49199999999999999,0.27500000000000002,0.36199999999999999,0.29599999999999999,0.33700000000000002,0.72299999999999998,0.185,0.21299999999999999,0.058999999999999997,0.34100000000000003,0.52500000000000002,0.48199999999999998,0.065000000000000002,0.46200000000000002,0.254,0.47799999999999998,0.047,0.39900000000000002,0.27800000000000002,0.19500000000000001,0.14499999999999999,0.33000000000000002,0.187,0.78100000000000003,0.78000000000000003,0.56100000000000005,0.053999999999999999,0.70399999999999996,0.22,0.76700000000000002,0.84399999999999997,0.51300000000000001,0.45300000000000001,0.80000000000000004,0.83699999999999997,0.42499999999999999,0.123,0.22900000000000001,0.82499999999999996,0.78100000000000003,0.23899999999999999,0.749,0.48899999999999999,0.41199999999999998,0.41199999999999998,0.41199999999999998,0.54100000000000004,0.23999999999999999,0.82099999999999995,0.54100000000000004,0.34799999999999998,0.084000000000000005,0.38200000000000001,0.80700000000000005,0.027,0.63100000000000001,0.113,0.317,0.79000000000000004,0.83999999999999997,0.14799999999999999,0.184,0.63100000000000001,0.065000000000000002,0.112,0.122,0.088999999999999996,0.048000000000000001,0.14499999999999999,0.095000000000000001,0.121,0.29999999999999999,0.0089999999999999993,0.20699999999999999,0.42199999999999999,0.496,0.33400000000000002,0.70599999999999996,0.114,0.32100000000000001,0.10100000000000001,0.14799999999999999,0.25800000000000001,0.443,0.51900000000000002,0.12,0.10100000000000001,0.434,0.112,0.042999999999999997,0.214,0.64100000000000001,0.036999999999999998,0.076999999999999999,0.79200000000000004,0.051999999999999998,0.66500000000000004,0.83899999999999997,0.34999999999999998,0.51000000000000001,0.115,0.623,0.063,0.71499999999999997,0.71199999999999997,0.88400000000000001,0.056000000000000001,0.84499999999999997,0.27000000000000002,0.83899999999999997,0.77000000000000002,0.443,0.77900000000000003,0.627,0.29599999999999999,0.755,0.79800000000000004,0.41599999999999998,0.33900000000000002,0.57999999999999996,0.59299999999999997,0.35699999999999998,0.84199999999999997,0.85199999999999998,0.14000000000000001,0.42299999999999999,0.55400000000000005,0.58299999999999996,0.047,0.28699999999999998,0.53700000000000003,0.33300000000000002,0.746,0.74299999999999999,0.47799999999999998,0.64200000000000002,0.091999999999999998,0.36799999999999999],\"text\":[\"Country: Mexico<br>Wealth: $16.81k<br>Democracy: 0.434\",\"Country: Suriname<br>Wealth: $11.75k<br>Democracy: 0.58\",\"Country: Sweden<br>Wealth: $48.80k<br>Democracy: 0.871\",\"Country: Switzerland<br>Wealth: $56.11k<br>Democracy: 0.866\",\"Country: Ghana<br>Wealth: $5.61k<br>Democracy: 0.615\",\"Country: South Africa<br>Wealth: $11.34k<br>Democracy: 0.607\",\"Country: Japan<br>Wealth: $39.06k<br>Democracy: 0.755\",\"Country: Burma/Myanmar<br>Wealth: $5.69k<br>Democracy: 0.26\",\"Country: Russia<br>Wealth: $25.61k<br>Democracy: 0.105\",\"Country: Albania<br>Wealth: $11.28k<br>Democracy: 0.432\",\"Country: Egypt<br>Wealth: $8.56k<br>Democracy: 0.119\",\"Country: Yemen<br>Wealth: $1.49k<br>Democracy: 0.04\",\"Country: Colombia<br>Wealth: $13.66k<br>Democracy: 0.507\",\"Country: Poland<br>Wealth: $27.28k<br>Democracy: 0.507\",\"Country: Brazil<br>Wealth: $11.76k<br>Democracy: 0.536\",\"Country: United States of America<br>Wealth: $60.64k<br>Democracy: 0.737\",\"Country: Portugal<br>Wealth: $28.81k<br>Democracy: 0.82\",\"Country: El Salvador<br>Wealth: $5.34k<br>Democracy: 0.401\",\"Country: Bangladesh<br>Wealth: $4.15k<br>Democracy: 0.096\",\"Country: Bolivia<br>Wealth: $6.16k<br>Democracy: 0.253\",\"Country: Haiti<br>Wealth: $1.66k<br>Democracy: 0.233\",\"Country: Honduras<br>Wealth: $4.86k<br>Democracy: 0.234\",\"Country: Mali<br>Wealth: $2.44k<br>Democracy: 0.32\",\"Country: Pakistan<br>Wealth: $4.56k<br>Democracy: 0.239\",\"Country: Peru<br>Wealth: $10.94k<br>Democracy: 0.697\",\"Country: Senegal<br>Wealth: $3.21k<br>Democracy: 0.573\",\"Country: South Sudan<br>Wealth: $21.72k<br>Democracy: 0.062\",\"Country: Sudan<br>Wealth: $4.99k<br>Democracy: 0.076\",\"Country: Vietnam<br>Wealth: $6.96k<br>Democracy: 0.121\",\"Country: Afghanistan<br>Wealth: $1.74k<br>Democracy: 0.184\",\"Country: Argentina<br>Wealth: $16.53k<br>Democracy: 0.631\",\"Country: Ethiopia<br>Wealth: $2.11k<br>Democracy: 0.159\",\"Country: India<br>Wealth: $6.79k<br>Democracy: 0.325\",\"Country: Kenya<br>Wealth: $3.38k<br>Democracy: 0.395\",\"Country: North Korea<br>Wealth: $1.79k<br>Democracy: 0.015\",\"Country: South Korea<br>Wealth: $40.99k<br>Democracy: 0.783\",\"Country: Kosovo<br>Wealth: $7.71k<br>Democracy: 0.492\",\"Country: Lebanon<br>Wealth: $10.28k<br>Democracy: 0.275\",\"Country: Nigeria<br>Wealth: $4.13k<br>Democracy: 0.362\",\"Country: Philippines<br>Wealth: $7.55k<br>Democracy: 0.296\",\"Country: Tanzania<br>Wealth: $2.46k<br>Democracy: 0.337\",\"Country: Taiwan<br>Wealth: $49.78k<br>Democracy: 0.723\",\"Country: Thailand<br>Wealth: $16.96k<br>Democracy: 0.185\",\"Country: Uganda<br>Wealth: $2.07k<br>Democracy: 0.213\",\"Country: Venezuela<br>Wealth: $1.19k<br>Democracy: 0.059\",\"Country: Benin<br>Wealth: $2.90k<br>Democracy: 0.341\",\"Country: Bhutan<br>Wealth: $11.45k<br>Democracy: 0.525\",\"Country: Burkina Faso<br>Wealth: $2.28k<br>Democracy: 0.482\",\"Country: Cambodia<br>Wealth: $4.23k<br>Democracy: 0.065\",\"Country: Indonesia<br>Wealth: $10.44k<br>Democracy: 0.462\",\"Country: Mozambique<br>Wealth: $1.61k<br>Democracy: 0.254\",\"Country: Nepal<br>Wealth: $2.74k<br>Democracy: 0.478\",\"Country: Nicaragua<br>Wealth: $4.79k<br>Democracy: 0.047\",\"Country: Niger<br>Wealth: $1.19k<br>Democracy: 0.399\",\"Country: Zambia<br>Wealth: $2.89k<br>Democracy: 0.278\",\"Country: Zimbabwe<br>Wealth: $3.11k<br>Democracy: 0.195\",\"Country: Guinea<br>Wealth: $2.65k<br>Democracy: 0.145\",\"Country: Ivory Coast<br>Wealth: $3.87k<br>Democracy: 0.33\",\"Country: Mauritania<br>Wealth: $3.77k<br>Democracy: 0.187\",\"Country: Canada<br>Wealth: $46.85k<br>Democracy: 0.781\",\"Country: Australia<br>Wealth: $48.07k<br>Democracy: 0.78\",\"Country: Botswana<br>Wealth: $15.10k<br>Democracy: 0.561\",\"Country: Burundi<br>Wealth: $0.74k<br>Democracy: 0.054\",\"Country: Cape Verde<br>Wealth: $6.47k<br>Democracy: 0.704\",\"Country: Central African Republic<br>Wealth: $0.83k<br>Democracy: 0.22\",\"Country: Chile<br>Wealth: $23.24k<br>Democracy: 0.767\",\"Country: Costa Rica<br>Wealth: $17.50k<br>Democracy: 0.844\",\"Country: Timor-Leste<br>Wealth: $3.50k<br>Democracy: 0.513\",\"Country: Ecuador<br>Wealth: $9.95k<br>Democracy: 0.453\",\"Country: France<br>Wealth: $40.65k<br>Democracy: 0.8\",\"Country: Germany<br>Wealth: $45.52k<br>Democracy: 0.837\",\"Country: Guatemala<br>Wealth: $7.13k<br>Democracy: 0.425\",\"Country: Iran<br>Wealth: $9.75k<br>Democracy: 0.123\",\"Country: Iraq<br>Wealth: $9.79k<br>Democracy: 0.229\",\"Country: Ireland<br>Wealth: $75.47k<br>Democracy: 0.825\",\"Country: Italy<br>Wealth: $33.78k<br>Democracy: 0.781\",\"Country: Jordan<br>Wealth: $7.29k<br>Democracy: 0.239\",\"Country: Latvia<br>Wealth: $27.57k<br>Democracy: 0.749\",\"Country: Lesotho<br>Wealth: $3.07k<br>Democracy: 0.489\",\"Country: Liberia<br>Wealth: $1.19k<br>Democracy: 0.412\",\"Country: Malawi<br>Wealth: $1.31k<br>Democracy: 0.412\",\"Country: Maldives<br>Wealth: $14.73k<br>Democracy: 0.412\",\"Country: Mongolia<br>Wealth: $9.32k<br>Democracy: 0.541\",\"Country: Morocco<br>Wealth: $7.99k<br>Democracy: 0.24\",\"Country: Netherlands<br>Wealth: $49.45k<br>Democracy: 0.821\",\"Country: Panama<br>Wealth: $24.98k<br>Democracy: 0.541\",\"Country: Papua New Guinea<br>Wealth: $4.04k<br>Democracy: 0.348\",\"Country: Qatar<br>Wealth: $80.19k<br>Democracy: 0.084\",\"Country: Sierra Leone<br>Wealth: $1.67k<br>Democracy: 0.382\",\"Country: Spain<br>Wealth: $36.10k<br>Democracy: 0.807\",\"Country: Syria<br>Wealth: $4.28k<br>Democracy: 0.027\",\"Country: Tunisia<br>Wealth: $10.86k<br>Democracy: 0.631\",\"Country: TÃ¼rkiye<br>Wealth: $23.60k<br>Democracy: 0.113\",\"Country: Ukraine<br>Wealth: $10.07k<br>Democracy: 0.317\",\"Country: United Kingdom<br>Wealth: $41.02k<br>Democracy: 0.79\",\"Country: Uruguay<br>Wealth: $20.93k<br>Democracy: 0.84\",\"Country: Algeria<br>Wealth: $11.62k<br>Democracy: 0.148\",\"Country: Angola<br>Wealth: $5.39k<br>Democracy: 0.184\",\"Country: Armenia<br>Wealth: $12.31k<br>Democracy: 0.631\",\"Country: Azerbaijan<br>Wealth: $14.20k<br>Democracy: 0.065\",\"Country: Belarus<br>Wealth: $20.81k<br>Democracy: 0.112\",\"Country: Cameroon<br>Wealth: $3.02k<br>Democracy: 0.122\",\"Country: Chad<br>Wealth: $1.72k<br>Democracy: 0.089\",\"Country: China<br>Wealth: $15.38k<br>Democracy: 0.048\",\"Country: Democratic Republic of the Congo<br>Wealth: $0.91k<br>Democracy: 0.145\",\"Country: Republic of the Congo<br>Wealth: $3.05k<br>Democracy: 0.095\",\"Country: Djibouti<br>Wealth: $6.17k<br>Democracy: 0.121\",\"Country: Dominican Republic<br>Wealth: $15.75k<br>Democracy: 0.3\",\"Country: Eritrea<br>Wealth: $21.06k<br>Democracy: 0.009\",\"Country: Gabon<br>Wealth: $11.01k<br>Democracy: 0.207\",\"Country: The Gambia<br>Wealth: $2.27k<br>Democracy: 0.422\",\"Country: Georgia<br>Wealth: $12.77k<br>Democracy: 0.496\",\"Country: Guinea-Bissau<br>Wealth: $1.64k<br>Democracy: 0.334\",\"Country: Jamaica<br>Wealth: $7.56k<br>Democracy: 0.706\",\"Country: Kazakhstan<br>Wealth: $23.83k<br>Democracy: 0.114\",\"Country: Kyrgyzstan<br>Wealth: $5.00k<br>Democracy: 0.321\",\"Country: Laos<br>Wealth: $6.23k<br>Democracy: 0.101\",\"Country: Libya<br>Wealth: $11.63k<br>Democracy: 0.148\",\"Country: Madagascar<br>Wealth: $1.31k<br>Democracy: 0.258\",\"Country: Moldova<br>Wealth: $8.27k<br>Democracy: 0.443\",\"Country: Namibia<br>Wealth: $9.33k<br>Democracy: 0.519\",\"Country: Rwanda<br>Wealth: $2.33k<br>Democracy: 0.12\",\"Country: Somalia<br>Wealth: $1.71k<br>Democracy: 0.101\",\"Country: Sri Lanka<br>Wealth: $12.58k<br>Democracy: 0.434\",\"Country: Eswatini<br>Wealth: $9.01k<br>Democracy: 0.112\",\"Country: Tajikistan<br>Wealth: $3.74k<br>Democracy: 0.043\",\"Country: Togo<br>Wealth: $1.80k<br>Democracy: 0.214\",\"Country: Trinidad and Tobago<br>Wealth: $28.04k<br>Democracy: 0.641\",\"Country: Turkmenistan<br>Wealth: $25.03k<br>Democracy: 0.037\",\"Country: Uzbekistan<br>Wealth: $10.70k<br>Democracy: 0.077\",\"Country: Austria<br>Wealth: $46.19k<br>Democracy: 0.792\",\"Country: Bahrain<br>Wealth: $30.05k<br>Democracy: 0.052\",\"Country: Barbados<br>Wealth: $17.88k<br>Democracy: 0.665\",\"Country: Belgium<br>Wealth: $44.20k<br>Democracy: 0.839\",\"Country: Bosnia and Herzegovina<br>Wealth: $11.98k<br>Democracy: 0.35\",\"Country: Bulgaria<br>Wealth: $20.00k<br>Democracy: 0.51\",\"Country: Comoros<br>Wealth: $2.71k<br>Democracy: 0.115\",\"Country: Croatia<br>Wealth: $23.44k<br>Democracy: 0.623\",\"Country: Cuba<br>Wealth: $8.99k<br>Democracy: 0.063\",\"Country: Cyprus<br>Wealth: $31.33k<br>Democracy: 0.715\",\"Country: Czechia<br>Wealth: $36.03k<br>Democracy: 0.712\",\"Country: Denmark<br>Wealth: $48.49k<br>Democracy: 0.884\",\"Country: Equatorial Guinea<br>Wealth: $21.08k<br>Democracy: 0.056\",\"Country: Estonia<br>Wealth: $31.51k<br>Democracy: 0.845\",\"Country: Fiji<br>Wealth: $10.52k<br>Democracy: 0.27\",\"Country: Finland<br>Wealth: $40.71k<br>Democracy: 0.839\",\"Country: Greece<br>Wealth: $24.80k<br>Democracy: 0.77\",\"Country: Guyana<br>Wealth: $11.03k<br>Democracy: 0.443\",\"Country: Iceland<br>Wealth: $54.55k<br>Democracy: 0.779\",\"Country: Israel<br>Wealth: $39.04k<br>Democracy: 0.627\",\"Country: Kuwait<br>Wealth: $45.01k<br>Democracy: 0.296\",\"Country: Lithuania<br>Wealth: $31.78k<br>Democracy: 0.755\",\"Country: Luxembourg<br>Wealth: $92.39k<br>Democracy: 0.798\",\"Country: North Macedonia<br>Wealth: $13.74k<br>Democracy: 0.416\",\"Country: Malaysia<br>Wealth: $26.26k<br>Democracy: 0.339\",\"Country: Malta<br>Wealth: $40.38k<br>Democracy: 0.58\",\"Country: Mauritius<br>Wealth: $25.00k<br>Democracy: 0.593\",\"Country: Montenegro<br>Wealth: $16.65k<br>Democracy: 0.357\",\"Country: New Zealand<br>Wealth: $37.97k<br>Democracy: 0.842\",\"Country: Norway<br>Wealth: $56.62k<br>Democracy: 0.852\",\"Country: Oman<br>Wealth: $21.73k<br>Democracy: 0.14\",\"Country: Paraguay<br>Wealth: $9.58k<br>Democracy: 0.423\",\"Country: Romania<br>Wealth: $19.70k<br>Democracy: 0.554\",\"Country: Sao Tome and Principe<br>Wealth: $3.37k<br>Democracy: 0.583\",\"Country: Saudi Arabia<br>Wealth: $33.26k<br>Democracy: 0.047\",\"Country: Serbia<br>Wealth: $14.12k<br>Democracy: 0.287\",\"Country: Seychelles<br>Wealth: $29.34k<br>Democracy: 0.537\",\"Country: Singapore<br>Wealth: $72.02k<br>Democracy: 0.333\",\"Country: Slovakia<br>Wealth: $30.94k<br>Democracy: 0.746\",\"Country: Slovenia<br>Wealth: $35.59k<br>Democracy: 0.743\",\"Country: Solomon Islands<br>Wealth: $2.50k<br>Democracy: 0.478\",\"Country: Vanuatu<br>Wealth: $3.23k<br>Democracy: 0.642\",\"Country: United Arab Emirates<br>Wealth: $64.63k<br>Democracy: 0.092\",\"Country: Hungary<br>Wealth: $25.83k<br>Democracy: 0.368\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,0,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":48.949771689497723},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Wealth and Democracy Around the World\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.23867930728251249,2.0705869127850498],\"tickmode\":\"array\",\"ticktext\":[\"$1k\",\"$10k\",\"$100k\"],\"tickvals\":[0,0.99999999999999989,2],\"categoryorder\":\"array\",\"categoryarray\":[\"$1k\",\"$10k\",\"$100k\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"GDP per Capita\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.034750000000000003,0.92774999999999996],\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\"],\"tickvals\":[0,0.25,0.5,0.75],\"categoryorder\":\"array\",\"categoryarray\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Liberal Democracy Score\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"displayModeBar\":false},\"source\":\"A\",\"attrs\":{\"16242b787aa7\":{\"x\":{},\"y\":{},\"text\":{},\"type\":\"scatter\"}},\"cur_data\":\"16242b787aa7\",\"visdat\":{\"16242b787aa7\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nNotice those points in the southwest cornerâ€”wealthy countries with low democracy scores. These are our **outliers**: observations that don't fit the general pattern of the data. Try hovering over the points to see which countries they include.\n\nBut it is important to note that **not all outliers are created equal**. In our case, these outliers are not measurement errorr but instead substantively interesting cases! They largely represent oil-rich authoritarian states, which tells us something important about the relationship between wealth and democracy.\n\n### Types of Outliers in Regression\n\nIn regression analysis, we distinguish between different types of unusual observations:\n\n- **Leverage points**: Extreme values on the x-axis (very high or low GDP)\n- **Influential points**: Points that significantly change the regression line when removed\n- **Residual outliers**: Points far from the regression line (high residuals)\n\nA point can be one, two, or all three of these simultaneously.\n\n## Identifying Outliers: Visual and Statistical Methods\n\n### Boxplots for Visual Identification\n\nThe simplest way to spot outliers is with boxplots. Let's examine both our variables with boxplots. Here we will create boxplots for both the democracy scores and the raw GDP per capita (before any transformations) using `geom_boxplot()`, which we learned about in an earlier lesson. We will store each object as a separate object and then use `patchwork` to combine them into a single figure.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create boxplots for both variables\nlibrary(patchwork)  # for combining plots\n\n# Boxplot for democracy scores\np1 <- ggplot(model_data, aes(y = lib_dem)) +\n  geom_boxplot() +\n  labs(y = \"Liberal Democracy Score\", \n       title = \"Democracy Outliers\") +\n  theme_minimal()\n\n# Boxplot for raw GDP (before transformation)\np2 <- ggplot(model_data, aes(y = wealth)) +\n  geom_boxplot() +\n  scale_y_continuous(labels = scales::dollar_format()) +\n  labs(y = \"GDP per Capita\", \n       title = \"GDP Outliers (Raw Data)\") +\n  theme_minimal()\n\n# Combine the plots\np1 | p2\n```\n\n::: {.cell-output-display}\n![](module-4.3_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### The IQR Method\n\nThe **Interquartile Range (IQR) method** is a common statistical approach for identifying outliers and forms the basis of the boxplot. It classifies a data point as an outlier if it falls more than 1.5 times the IQR below the first quartile (Q1) or above the third quartile (Q3). This helps flag unusually high or low values that may deserve further scrutiny.\n\nIn the code below, we identify outliers in GDP per capita using the base R function `boxplot.stats()`, which applies the IQR method internally. We use the `%in%` operator to check which GDP values are identified as outliers and store this as a new logical column, gdp_outlier. Since our earlier boxplot analysis showed no democracy outliers, we simplify the analysis here by focusing only on GDP. We then summarize how many outliers there are and list the countries identified as GDP outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify GDP outliers \nmodel_data <- model_data |>\n  mutate(gdp_outlier = wealth %in% boxplot.stats(wealth)$out)\n\n# Summarize how many outliers\nmodel_data |>\n  summarize(\n    gdp_outliers = sum(gdp_outlier),\n    percent_outliers = round(100 * mean(gdp_outlier), 1)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  gdp_outliers percent_outliers\n1            6              3.4\n```\n\n\n:::\n\n```{.r .cell-code}\n# View GDP outlier countries\nmodel_data |>\n  filter(gdp_outlier) |>\n  arrange(desc(wealth)) |>\n  select(country, wealth, lib_dem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   country wealth lib_dem\n1               Luxembourg 92.389   0.798\n2                    Qatar 80.190   0.084\n3                  Ireland 75.467   0.825\n4                Singapore 72.025   0.333\n5     United Arab Emirates 64.628   0.092\n6 United States of America 60.641   0.737\n```\n\n\n:::\n:::\n\n\n::: {.callout-important}\n## Understanding the Code\n\nIn the code above, we use the base R function `boxplot.stats()` to identify GDP outliers. This function returns several components, including a named element called $out that contains the values considered outliers.\n\nSo when we write `wealth %in% boxplot.stats(wealth)$out` we are checking which values of wealth are included in the set of outliers returned by boxplot.stats(). The result is a logical vector (TRUE for outliers, FALSE otherwise), which we store in a new column using mutate(). \n:::\n\n### Identifying Influential Points in Regression\n\nTo assess the quality of a regression model and identify observations that may unduly affect the results, we can compute **diagnostic statistics**. These help us detect data points that are surprising, unusual, or overly influential in determining the regression line. While there are multiple diagnostic measures, three are commonly used: **leverage**, **standardized residuals**, and **Cookâ€™s distance**.\n\nWe use the `broom` packageâ€™s `augment()` function to compute these diagnostics in a tidy, data-frame format. `augment()` takes a fitted model object (like one created by `lm()`) and returns the original data along with new columns containing fitted values, residuals, and other diagnostic measures:\n\n* `.fitted`: the predicted values from the model\n* `.resid`: the raw residuals (observed â€“ fitted)\n* `.std.resid`: standardized residuals (adjusted for their expected variance)\n* `.hat`: leverage values, which measure how extreme the predictor values are\n* `.cooksd`: Cookâ€™s distance, which combines leverage and residual size to estimate how much a point influences the model\n\nThese statistics allow us to flag potentially problematic points:\n\n* **High leverage** points have unusual predictor values. They donâ€™t necessarily distort the model, but they have the potential to. A common rule of thumb is that leverage values greater than twice the mean are worth inspecting.\n* **High residual** points are poorly fit by the modelâ€”they lie far from the regression line. Standardized residuals larger than Â±2 are typically considered large.\n* **High influence** points affect the model's coefficients disproportionately. Cookâ€™s distance greater than `4/n` (where `n` is the number of observations) is a common informal threshold.\n\nBy combining these diagnostics, we can identify cases that might merit further attentionâ€”due to unusual inputs, poor fit, or disproportionate influence on the modelâ€™s results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\n# Fit model\ndemocracy_model <- lm(lib_dem ~ log(wealth), data = model_data)\n\n# Get model diagnostics (with original data attached)\nmodel_diagnostics <- augment(democracy_model, data = model_data)\n\n# Add thresholds for outlier detection\nmodel_diagnostics <- model_diagnostics |>\n  mutate(\n    high_leverage = .hat > 2 * mean(.hat, na.rm = TRUE),\n    high_residual = abs(.std.resid) > 2,\n    high_influence = .cooksd > 4 / nrow(model_data)\n  )\n\n# Filter problematic cases\nmodel_diagnostics |>\n  filter(high_leverage | high_residual | high_influence) |>\n  select(country, wealth, lib_dem, high_leverage, high_residual, high_influence)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 Ã— 6\n   country             wealth lib_dem high_leverage high_residual high_influence\n   <chr>                <dbl>   <dbl> <lgl>         <lgl>         <lgl>         \n 1 Venezuela            1.19    0.059 TRUE          FALSE         FALSE         \n 2 Niger                1.19    0.399 TRUE          FALSE         FALSE         \n 3 Burundi              0.735   0.054 TRUE          FALSE         FALSE         \n 4 Central African Reâ€¦  0.827   0.22  TRUE          FALSE         FALSE         \n 5 Ireland             75.5     0.825 TRUE          FALSE         FALSE         \n 6 Liberia              1.19    0.412 TRUE          FALSE         FALSE         \n 7 Malawi               1.31    0.412 TRUE          FALSE         FALSE         \n 8 Qatar               80.2     0.084 TRUE          TRUE          TRUE          \n 9 Democratic Republiâ€¦  0.913   0.145 TRUE          FALSE         FALSE         \n10 Eritrea             21.1     0.009 FALSE         TRUE          FALSE         \n11 Madagascar           1.31    0.258 TRUE          FALSE         FALSE         \n12 Turkmenistan        25.0     0.037 FALSE         TRUE          FALSE         \n13 Bahrain             30.0     0.052 FALSE         TRUE          TRUE          \n14 Luxembourg          92.4     0.798 TRUE          FALSE         FALSE         \n15 Saudi Arabia        33.3     0.047 FALSE         TRUE          TRUE          \n16 United Arab Emiratâ€¦ 64.6     0.092 FALSE         TRUE          TRUE          \n```\n\n\n:::\n:::\n\n\n\nThe analysis identified a fairly large number of cases as having high leverage, large residuals, or high influence. But it is important to note that these are not necessarily errors in the data or points that necessarily have to be removed. Rather, they are observations that deviate from what the model expects and exert a disproportionate pull on the regression line. \n\n::: {.callout-warning icon=false}\n## Your Turn!!\n- Try running the regression with `polarization` as the independent variable instead of `wealth`. \n- Now use the code above to identify influential observations in this new model.\n- What do you notice? Are there any countries that are influential in both models? Or are most of the influential points new ones? \n:::\n\n## Dealing with Outliers: Strategies and Considerations\n\nOutliers and influential observations warrant closer inspection. Outliers may represent countries with unusual political or economic profiles, or cases that do not conform well to the general trend. Influential observations often reveal the limits of a simple model and can point to deeper questions about the structure of the data or the need for additional variables.\n\nAfter considering extreme or influential data points more closely, we can decide what to do with them. One option is to do nothing and leave them in the dataset as is. Another option to assess how much they affect the results by re-estimating the model with and without them. Another option is to tranform the data to reduce their influence. Finally, we can perform an operation called **winsorizing**, which caps extreme values at a specified percentile rather than removing them entirely.\n\n### Removing Outliers\n\nOne approach is to remove outliers entirely. This is appropriate when the outliers represent data entry errors, they come from a different population than your main analysis, or you want to understand the relationship for the \"typical\" cases. But another option is to remove outliers or influential points termporarily to see how they affect the results. If they change the results significantly, this should be acknowledged and discussed.\n\nLet's start by rerunning the regression model with the original data, including all observations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemocracy_model <- lm(lib_dem ~ log(wealth), data = model_data)\n\nsummary(democracy_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = lib_dem ~ log(wealth), data = model_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.57441 -0.14334  0.03911  0.18730  0.37017 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.13051    0.03806   3.429 0.000758 ***\nlog(wealth)  0.12040    0.01471   8.188 5.75e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2233 on 172 degrees of freedom\nMultiple R-squared:  0.2805,\tAdjusted R-squared:  0.2763 \nF-statistic: 67.04 on 1 and 172 DF,  p-value: 5.754e-14\n```\n\n\n:::\n:::\n\n\n\nNow let's remove some of the problematic points we found earlier. Since we identified several countries as having high leverage, large residuals, or high influence, let's see how removing them affects our regression results. We'll fit the model both with and without these outliers and compare the results. Let's start by removing the outliers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove countries with extreme leverage or influence\nmodel_data_no_outliers <- model_diagnostics |>\n  filter(!high_leverage | !high_residual | !high_influence) |>\n  select(country, wealth, lib_dem,)\n```\n:::\n\n\n::: {.callout-important}\n## Understanding the Code\nHere we use the `filter()` function in conjunction with the `!` and `|` operators. The `!` operator negates the condition, so `!high_leverage` means \"not high leverage.\" The `|` operator means \"or,\" so we are filtering out any rows that have high leverage, large residuals, or high influence. \n:::\n\nNow let's fit the model without the outliers to see if our results substantially change.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_without_outliers <- lm(lib_dem ~ log(wealth), data = model_data_no_outliers)\n\nsummary(model_without_outliers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = lib_dem ~ log(wealth), data = model_data_no_outliers)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.55358 -0.14282  0.04255  0.18092  0.37282 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.12166    0.03756   3.239  0.00144 ** \nlog(wealth)  0.12568    0.01459   8.614 4.53e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2195 on 171 degrees of freedom\nMultiple R-squared:  0.3026,\tAdjusted R-squared:  0.2985 \nF-statistic:  74.2 on 1 and 171 DF,  p-value: 4.534e-15\n```\n\n\n:::\n:::\n\n\nHere we do not notice a substantial difference between these results and those of the original model. We see that the coefficient for `log(wealth)` remains positive and statistically significant, and the R-squared value is similar. This suggests that while the outliers were influential, they did not fundamentally change the relationship between GDP and democracy in this case.\n\n### Data Transformation\n\nNow that we've identified outliers in our raw data, let's see how **transformations** can help reduce their influence. We've already been using one transformationâ€”taking the log of GDP! Let's see why this helps with outliers.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](module-4.3_files/figure-html/log-transformation-comparison-1.png){width=672}\n:::\n:::\n\n\nNotice how the log transformation improves the model fit. This is because logging compresses large values, reducing the influence of those extremely wealthy outlier countries. \n\nOther common transformations, like the **square root** and **Box-Cox transformations**, can also help manage skewed data and reduce the influence of outliers. Like the log transformation, these approaches work by **compressing large values**, which pulls extreme observations closer to the main body of the data. This can lead to a better-fitting model and more stable inferences.\n\nThe **square root transformation** is useful when data are moderately skewed and values are all positive. It's a simpler alternative to logging and is often used when data contain some high values but not extreme outliers.\n\nThe **Box-Cox transformation** is more flexibleâ€”it finds the \"best\" power transformation (e.g., square root, log, reciprocal) based on the data itself. It's especially helpful when you're unsure which transformation is appropriate. Like log and square root transformations, Box-Cox can improve linearity and reduce the impact of outliers.\n\nWhen we compare models using different transformations, we often look at **goodness-of-fit measures** like **R-squared**, **adjusted R-squared**, and **AIC**. These metrics help us assess whether the transformation improves model fit while avoiding overfitting. In general, a **higher adjusted R-squared** and a **lower AIC** suggest a better-fitting model.\n\nWe wonâ€™t go deep into the code here, but itâ€™s important to know that transformations are a standard part of the data science toolkit. They help models perform better when relationships are nonlinear or when extreme values distort the picture. The log transformation is one exampleâ€”but not the only oneâ€”of how transforming variables can lead to more meaningful and interpretable results.\n\n### Winsorizing\n\n**Winsorizing** is another technique to reduce the impact of extreme values, especially when we donâ€™t want to throw out data points entirely. Unlike trimming (which removes outliers), Winsorizing **caps** them at a specified percentile. For example, using the 95th percentile replaces all values above it with the 95th percentile value.\n\nThis can help tame the influence of outliers in a way that's **less aggressive than deletion** and doesn't distort model assumptions as much as leaving extreme values untouched. It's especially useful when you suspect that very high or low values are distorting the fit of your regression.\n\nLet's Winsorize our GDP data at the 95th percentile using the `winsorize()` function from the `datawizard` package. This will cap extreme values at the 95th percentile, reducing their influence without removing them entirely.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datawizard)\n\n# Winsorize the data\nmodel_data_winsorized <- model_data |>\n  mutate(\n    wealth_win95 = winsorize(wealth, threshold = 0.05)\n  )\n```\n:::\n\n\nNow let's visualizing the winsorizing effects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Show the effect of winsorizing on raw GDP data\noriginal_plot <- ggplot(model_data, aes(x = wealth)) +\n  geom_histogram(bins = 30, alpha = 0.7, fill = \"darkblue\") +\n  scale_x_continuous(labels = scales::label_dollar(suffix = \"k\")) +\n  labs(title = \"Original Distribution\", x = \"GDP per Capita\") +\n  theme_minimal()\n\nwinsorized_plot <- ggplot(model_data_winsorized, aes(x = wealth_win95)) +\n  geom_histogram(bins = 30, alpha = 0.7, fill = \"darkred\") +\n  scale_x_continuous(labels = scales::label_dollar(suffix = \"k\")) +\n  labs(title = \"Winsorized Distribution\", x = \"GDP per Capita\") +\n  theme_minimal()\n\noriginal_plot | winsorized_plot\n```\n\n::: {.cell-output-display}\n![](module-4.3_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nHere we clearly see how winsorizing reduces the impact of extreme values. The histogram on the left shows the original distribution with its long right tail, while the winsorized histogram on the right caps those extreme values, making the distribution a bit more symmetric.\n\n### Robust Regression\n\nOne last approach we will briefly explore is **robust regression**. This technique is designed to be less sensitive to outliers than ordinary least squares (OLS) regression. It uses different loss functions that reduce the influence of extreme values, making it a good choice when you have outliers that you do not want to remove or transform. We can perform robust regression using the `rlm()` function from the `MASS` package, which implements a robust version of linear regression.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Robust regression is less sensitive to outliers\nlibrary(MASS)\n\nrobust_model <- rlm(lib_dem ~ log(wealth), data = model_data)\n\nsummary(robust_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall: rlm(formula = lib_dem ~ log(wealth), data = model_data)\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.60880 -0.15368  0.03422  0.17024  0.37024 \n\nCoefficients:\n            Value  Std. Error t value\n(Intercept) 0.1178 0.0385     3.0619 \nlog(wealth) 0.1311 0.0149     8.8195 \n\nResidual standard error: 0.2429 on 172 degrees of freedom\n```\n\n\n:::\n:::\n\n\nHere we see that the coefficients and significance levels are similar to our original OLS model, but we can be more confident that the results are not overly influenced by the outliers we identified earlier. \n\n::: {.callout-warning icon=false}\n## Your Turn!!\n\n- Try removing the influential points in the polarization model that you created earlier.\n- Rerun the model with those influential points removed and compare the results to the original model.\n- How do the results change? Do you notice any differences in the coefficients or significance levels?\n- Now try winsorizing the polarization data at the 95th percentile and rerunning the model. How does this affect the results?\n- Finally, try running a robust regression on the polarization data. How do the results compare to the original model and the winsorized model?\n:::\n\n## Making the Right Choice\n\nWhen dealing with outliers and influential observations, the most important step is to understand their nature and context. Outliers caused by data entry errors or coming from clearly different populations (like microstates in a global dataset) may justify removal. But many outliers are legitimate and may be the most substantively interesting cases in your data. In those situations, it's often better to retain them and use transformations (like logging or Box-Cox) to reduce their influence, especially when the data are naturally skewed. Winsorizing offers a middle groundâ€”keeping all observations while capping extreme valuesâ€”particularly useful in predictive modeling or when you suspect noise in the extreme tails.\n\nWhatever approach you takeâ€”removal, transformation, winsorizing, or none at allâ€”itâ€™s essential to report your decisions clearly and check how they affect your results. Describe how you identified outliers, explain your reasoning for handling them in a specific way, and conduct a brief sensitivity analysis to see if your main conclusions change. Outlier handling is not just a technical step; it's a modeling decision that should be transparent and justifiable to your audience.",
    "supporting": [
      "module-4.3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}