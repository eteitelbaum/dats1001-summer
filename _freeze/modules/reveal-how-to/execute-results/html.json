{
  "hash": "5a975a9f75dbcfc258603da7ba14a0bc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to Make RevealJS Presentations\"\nformat: \n  html:\n    code-link: true\nhighlight-style: atom-one\nexecute: \n  echo: true\n  message: false\n  warning: false\n---\n\n::: {.callout-tip}\n## Prework\n\n- Read the Quarto [revealjs guide](https://quarto.org/docs/presentations/revealjs/)\n- Check out [Quarto Pub](https://quartopub.com/) and sign up for an account\n:::\n\n## Overview\n\nReveal.js presentations are ultimately an extension of the HTML documents you have already been creating with Quarto. Instead of producing a single scrolling webpage, Quarto generates an interactive slide-based presentation that runs in any web browser. All the skills that you developed for creating HTML documents like embedding code, adding visualizations, formatting with markdown transfer directly to presentations.\n\nThe key advantage of Reveal.js for data science is that your presentations remain dynamic and interactive. Unlike PowerPoint slides, you can include live code execution, interactive visualizations, and real-time data displays. Since presentations run in browsers, sharing becomes as simple as sending a URL, and your audience can interact with embedded charts, maps, and widgets during your presentation.\n\n## Getting Started with Reveal.js\n\n### From HTML Documents to Presentations\n\nIf you have been creating HTML documents with Quarto, you already understand most of what you need for Reveal.js presentations. The primary difference lies in structure: whereas HTML documents flow as continuous content, presentations organize content into discrete slides using markdown headers.\n\nReveal.js offers significant advantages over traditional presentation software through its web-based nature. Interactive elements like clickable charts and embedded widgets work seamlessly, presentations display identically across all devices and platforms, and sharing requires only a URL rather than managing file compatibility issues.\n\n### Basic Setup\n\nCreating a Reveal.js presentation requires minimal changes to your existing Quarto workflow. Simply specify `revealjs` as your output format:\n\n```yaml\n---\ntitle: \"My Data Science Presentation\"\nauthor: \"Your Name\"\ndate: today\nformat: revealjs\n---\n```\n\nYou can enhance this basic setup with additional options that control presentation behavior:\n\n```yaml\n---\ntitle: \"Advanced Data Analysis\"\nsubtitle: \"Q4 Performance Review\"\nauthor: \"Data Science Team\"\nfooter: \"[Company Website](https://company.com)\"\nformat:\n  revealjs:\n    theme: simple\n    transition: fade\n    slide-number: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n---\n```\n\nThe `execute` section controls R code behavior throughout your presentation, just as it does in HTML documents.\n\n## Building Presentation Structure\n\n### Slide Hierarchy\n\nReveal.js translates markdown hierarchy directly into slide organization. Single hash marks (`#`) create section headers that appear as title slides for major topics. Double hash marks (`##`) create individual content slides. This structure mirrors how you might organize longer HTML documents with sections and subsections.\n\nRegular markdown content fills each slide. For data science presentations, you might organize sections around analysis phases, methodologies, or research questions, with individual slides covering specific findings or techniques within each section.\n\n### Managing Content and Spacing\n\nEffective spacing prevents slides from appearing cramped. Use HTML break tags (`<br>`) strategically to create visual breathing room:\n\n```markdown\n## Key Findings\n\n<br>\n\nOur analysis revealed three major insights that will guide future strategy development.\n\n<br>\n\nCustomer retention improved by 23%, representing our strongest performance in this metric over the past five years.\n```\n\n### Progressive Content Revelation\n\nReveal.js can display content incrementally, keeping audiences focused on specific points. Enable this globally in your YAML:\n\n```yaml\nformat:\n  revealjs:\n    incremental: true\n```\n\nOr selectively using div blocks:\n\n```markdown\n::: {.incremental}\n- Our analysis process followed three critical phases. \n- First, comprehensive data collection from multiple sources. \n- Second, rigorous cleaning and validation procedures. \n- Finally, advanced analytical techniques to extract meaningful insights.\n:::\n```\n\nTurn off incremental behavior for specific slides when needed:\n\n```markdown\n::: {.nonincremental}\nFinal performance metrics demonstrate success across all categories: \n\n- Revenue increased 23% year-over-year\n- Customer satisfaction reached 4.2/5.0\n- Market share expanded 3.2 percentage points\n:::\n```\n\n## Advanced Layout and Content\n\n### Handling Content Overflow\n\nWhen slides contain more information than standard layouts accommodate, use the `.smaller` class to reduce text size proportionally:\n\n```markdown\n## Detailed Analysis Results {.smaller}\n\n- This \n- is \n- a\n- very\n- long \n- slide\n- with \n- lots \n- of \n- points\n  - and \n  - subpoints...\n```\n\nFor truly extensive content, enable scrolling with `.scrollable`:\n\n```markdown\n## Complete Dataset Overview {.scrollable}\n\n- This \n- is \n- another\n- very\n- long \n- slide\n- with \n- lots \n- of \n- points\n  - and \n  - subpoints...\n```\n\n### Images and Multi-Column Layouts\n\nImages follow standard markdown syntax, with size control through width attributes:\n\n```markdown\n![Analysis workflow](images/workflow-diagram.png){width=70%}\n```\n\nMulti-column layouts work excellently for comparing visualizations or presenting code alongside output:\n\n```markdown\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nOur machine learning methodology involved comprehensive feature engineering, cross-validation to prevent overfitting, and extensive hyperparameter tuning to optimize performance.\n:::\n\n::: {.column width=\"60%\"}\n![Model performance comparison](images/model-comparison.png){width=100%}\n:::\n\n::::\n```\n\n## Code Integration and Interactivity\n\n### Displaying Code and Results\n\nCode integration in Reveal.js presentations works identically to HTML documents. Basic code blocks use standard markdown:\n\n````markdown\n```r\nlibrary(ggplot2)\nggplot(mtcars, aes(x = mpg, y = hp)) +\n  geom_point() +\n  theme_minimal()\n```\n````\n\nR code chunks execute and display results:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nsummary(mtcars$mpg)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.40   15.43   19.20   20.09   22.80   33.90 \n```\n\n\n:::\n:::\n\n\nControl what displays using familiar chunk options. Show only output by setting `echo: false`, show only code with `eval: false`, or highlight specific lines:\n\n\n::: {.cell}\n\n````{.cell-code  code-line-numbers=\"2-3\"}\n```{{r}}\n#| code-line-numbers: \"2-3\"\n\nlibrary(dplyr)\nmtcars |>\n  filter(cyl == 6) |>\n  summarize(avg_mpg = mean(mpg))\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   avg_mpg\n1 19.74286\n```\n\n\n:::\n:::\n\n\n### Interactive Elements\n\nInteractive visualizations transform static presentations into engaging experiences:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(leaflet)\nleaflet() |>\n  addTiles() |>\n  addMarkers(lat = 38.9072, lng = -77.0369,\n             popup = \"Data Science Hub\")\n```\n````\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-bfab3b9ccd6221fb2086\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bfab3b9ccd6221fb2086\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[38.9072,-77.0369,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"Data Science Hub\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[38.9072,38.9072],\"lng\":[-77.0369,-77.0369]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nAudiences can interact with maps, charts, and widgets during your presentation, creating opportunities for dynamic discussion and exploration.\n\n## Customization and Styling\n\n### Themes and Visual Design\n\nReveal.js offers numerous built-in themes through simple YAML specification:\n\n```yaml\nformat:\n  revealjs:\n    theme: dark        # Options: simple, dark, white, solarized, etc.\n```\n\nChoose themes that support your content: `simple` for clean, data-focused presentations; `dark` for modern aesthetics that make visualizations pop; `white` for professional business environments.\n\n### Custom Styling and Backgrounds\n\nCreate custom SCSS files for specific branding requirements:\n\n```scss\n/*-- scss:defaults --*/\n$body-bg: #f8f9fa;\n$link-color: #007bff;\n\n/*-- scss:rules --*/\n.reveal .slide blockquote {\n  border-left: 3px solid #007bff;\n  padding-left: 0.5em;\n}\n```\n\nReference custom styles alongside base themes:\n\n```yaml\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n```\n\nAdd background colors or images to specific slides:\n\n```markdown\n## Important Results {background-color=\"#1e3a8a\"}\n\n## Market Analysis {background-image=\"images/trends.png\" \n                   data-background-opacity=\"0.3\"}\n```\n\n## Publishing and Sharing\n\n[Quarto Pub](https://quartopub.com/) provides free hosting optimized for Quarto content. You can publish Reveal.js presentations directly from your Quarto project, making it easy to share with colleagues or the public.\n\nAfter you set up your Quarto Pub account, you can deploy presentations with a single terminal command:\n\n```bash\nquarto publish quarto-pub your-presentation.qmd\n```\n\nFirst-time users will authenticate through GitHub, Google, or email, then choose a site name. Your presentation becomes available at `https://yoursitename.quarto.pub/presentation-name/` and updates automatically when you republish.\n\n## Conclusion\n\nReveal.js presentations extend your existing HTML document skills into dynamic, interactive presentation formats. The same techniques you've learned for embedding code, creating visualizations, and formatting content apply directly to presentation creation, with the added benefits of slide organization and interactive delivery.\n\nThese skills enable you to communicate complex analyses engagingly, share interactive visualizations that invite audience participation, and create memorable presentations that showcase your data science expertise effectively. The combination of familiar Quarto workflows with Reveal.js's presentation capabilities provides powerful tools for professional data science communication.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}