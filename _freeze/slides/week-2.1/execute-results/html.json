{
  "hash": "03650dfd8fccd332b737816ff011aba9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: R Coding Basics\n#subtitle: \ndate: today\ndate-format: long\nfooter: \"[DATS 1001 Website](https://ds4all.rocks)\"\nlogo: images/ds4all-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n# R Programming Basics\n\n## What Can R Do? \n\n<br>\n\n::: incremental\n- R is a powerful language for data analysis and visualization\n- It is also a general-purpose programming language\n- Does everything from web development to machine learning\n- It is open-source and has a large community of users and developers\n:::\n\n## R as a Calculator\n\n<br>\n\n- R can be used as a simple calculator\n- You can perform arithmetic operations on numbers\n\n::: {.cell}\n\n```{.r .cell-code}\n# Addi a number and store it to a value\nsum_of_2plus2 <- 2 + 2\n\n\nsum_of_2plus2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n## Some Common Arithmetic Operators\n\n<br>\n\n- `+` addition\n- `-` subtraction\n- `*` multiplication\n- `/` division\n- `^` exponentiation (also `**`)\n\n## Your Turn! \n\n<br>\n\n- Try some basic calculations \n- Try them in a code chunk in the Quarto doc\n- Then try some in the console\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_43f6843e\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n# Objects\n\n## What is an Object?\n\n::: incremental\n- An object in R is a data structure used to store data\n- It can vary from simple scalar types to more complex data structures like vectors, lists, or data frames\n- Objects hold not only data but also information about the type of data and the operations that can be performed on them\n- Every entity in R is considered an object, making R a language based around the manipulation of objects\n:::\n\n## How to Store Data\n\n- In R, you can store data in objects using the assignment operator `<-`\n- The object name is on the left of `<-`, and the data or value you wish to assign to the object is on the right\n- Then you can print the object to the console using the object name\n\n::: {.cell}\n\n```{.r .cell-code}\n# Store the value 42 in the object my_number\nmy_number <- 42\n\n# Print the value of my_number\nmy_number \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42\n```\n\n\n:::\n:::\n\n## Storing a Vector \n\n<br>\n\n- Sometimes you want to store more than one number\n- In this case you can store a *vector*\n- A vector is a collection of numbers or characters\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_numbers <- c(1, 2, 3, 4, 5)\n\nmy_numbers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5\n```\n\n\n:::\n:::\n\n## \"Printing\" objects\n\n<br>\n\n- Sometimes you will see `print()` used to display the contents of objects\n- This is not typically necessary\n- Sometimes you need it (like when printing inside of a function)\n- But usually you can just type the name of the object\n\n## Your Turn!\n\n<br>\n\n- Store a number in an object\n- Create a vector of numbers and store it in an object\n- \"Print\" the objects by typing the object names\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_486e02ea\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n# Functions\n\n## Functions\n\n- A function is a set of instructions that produces some output\n- In R, you can use built-in functions to perform specific tasks\n- For example, you can use the `mean()` function to calculate the average of a set of numbers\n- To do this you have to use the combine function `c()` to create a vector of numbers\n\n## \n\n<br> \n\nCreate a vector of numbers and take the mean...\n\n<br>\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a vector of numbers\nnumbers <- c(1, 2, 3, 4, 5)\n\n# Calculate the mean of the numbers\nmean(numbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n## Some Common Base R Functions {.smaller}\n\n- `mean()` calculates the mean of a set of numbers\n- `median()` calculates the median of a set of numbers\n- `sd()` calculates the standard deviation of a set of numbers\n- `sum()` calculates the sum of a set of numbers\n- `length()` calculates the length of a vector\n- `max()` and `min()` calculate the maximum and minimum values of a vector\n- `round()` rounds a number to a specified number of decimal places\n- `sqrt()` calculates the square root of a number\n- `log()` calculates the natural logarithm of a number\n- `exp()` calculates the exponential of a number\n- `abs()` calculates the absolute value of a number\n\n## Your Turn!\n\n<br>\n\n- Create a vector of numbers\n- Store as an object\n- Apply a function to the object\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_a674471a\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n# Packages\n\n## From Functions to Packages {.smaller}\n\n<br>\n\n::: {.incremental}\n-   A *function* is a set of instructions\n    -   `read_csv()` is a function\n    -   `ggplot()` is a function\n-   A *package* is a collection of functions\n    -   `readr` is a package that contains the `read_csv()` function\n    -   `ggplot2` is a package that contains the `ggplot()` function\n-   Use `install.packages()` to install packages\n-   Use `library()` to load packages\n-   You can install packages from CRAN\n:::\n\n## Installing Packages\n\n<br>\n\n- You can install packages from CRAN (Comprehensive R Archive Network)\n- Use the `install.packages()` function to install packages\n- For example, to install the `tidyverse` package, you would run `install.packages(\"tidyverse\")`\n\n## Installing Packages\n\n<br>\n\n- Another way to install packages is from a GitHub repository\n- We will use the `pak` package to install packages from GitHub\n- To install `pak`, run `install.packages(\"pak\")`\n- Then you can use `pak::pkg_install()` to install packages from GitHub\n- For example, to install the `vdemlite` package, you would run `pak::pkg_install(\"eteitelbaum/vdemlite\")`\n\n## Installing Packages\n\n<br>\n\n- You only need to install a package once\n- After you install a package, you can load it with the `library()` function\n- Do **not** put `install.packages()` in your R script or Quarto document\n\n## Your Turn!\n\n<br>\n\n- Install the `tidyverse` package in your environment\n- Load the `tidyverse` package\n- Install the `pak` package\n- Install `vdemlite` using `pak::pkg_install()`\n- Load the `vdemlite` package\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_ec89c1f4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n# Running R and RStudio Locally\n\n## Installing R and RStudio\n\n<br>\n\n- You can install R and RStudio on your local machine\n- Visit [Posit](https://posit.co/download/rstudio-desktop/) to download R and RStudio\n- Install R first, then RStudio\n- You download R from CRAN and RStudio from the RStudio website\n\n\n## Try It!\n\n<br>\n\n- Install R and RStudio on your local machine\n- Open RStudio\n- Open a Quarto document\n- Try some of the code we have used today\n- Install the `tidyverse` package\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}