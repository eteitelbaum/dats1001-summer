{
  "hash": "2c56dc3e90e48670428b4bb0f7298932",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Intro to the Tidyverse\ndate: today\ndate-format: long\nfooter: \"[DATS 1001 Website](https://ds4all.rocks)\"\nlogo: images/ds4all-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n## A Data Science Workflow\n\n<br>\n\n![ ](images/ds-workflow.png)\n\n## The Tidyverse\n\n::: {.incremental}\n-   The Tidyverse is a collection of data science packages\n-   It is also considered a dialect of R\n-   In this class, we will be using many Tidyverse packages\n    - `readr` for reading data   \n    - `tidyr` for data tidying\n    - `dplyr` for data manipulation\n    - `ggplot2` for data visualization\n-   Click [here](https://www.tidyverse.org/packages/) for a full list\n:::\n\n## Working with Tidyverse packages\n\n<br>\n\n-   At first we will load the packages independently, e.g. `library(ggplot2)`\n-   Later we will load them all at once with `library(tidyverse)`\n-   Another way to call a package is with `::`, e.g. `ggplot2::ggplot()`\n\n## Reading Data into R\n\n<br>\n\n- Let's use the `readr` package to read in a dataset\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n```\n:::\n\n## Let's Look at the Data\n\n<br>\n\nOne way to do this is with the base R `head()` function\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dem_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  region         polyarchy gdp_pc  flfp women_rep\n  <chr>              <dbl>  <dbl> <dbl>     <dbl>\n1 The West           0.871  37.9   53.0      28.1\n2 Latin America      0.637   9.61  48.1      21.3\n3 Eastern Europe     0.539  12.2   50.5      18.0\n4 Asia               0.408   9.75  50.3      14.5\n5 Africa             0.393   4.41  56.7      17.4\n6 Middle East        0.246  21.1   26.6      10.2\n```\n\n\n:::\n:::\n\n## Use `View()` \n\n<br>\n\nAnother way to look at the data is with `View()`. Or click on the name of the data frame in the Environment pane.\n\n::: {.cell}\n\n```{.r .cell-code}\nView(dem_summary)\n```\n:::\n\n## Using `glimpse()` from `dplyr`\n\n<br>\n\nAnother way to look at the data is with `glimpse()` from the `dplyr` package.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nglimpse(dem_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6\nColumns: 5\n$ region    <chr> \"The West\", \"Latin America\", \"Eastern Europe\", \"Asia\", \"Afri…\n$ polyarchy <dbl> 0.8709230, 0.6371358, 0.5387451, 0.4076602, 0.3934166, 0.245…\n$ gdp_pc    <dbl> 37.913054, 9.610284, 12.176554, 9.746391, 4.410484, 21.134319\n$ flfp      <dbl> 52.99082, 48.12645, 50.45894, 50.32171, 56.69530, 26.57872\n$ women_rep <dbl> 28.12921, 21.32548, 17.99728, 14.45225, 17.44296, 10.21568\n```\n\n\n:::\n:::\n\n## Your Turn! \n\n<br>\n\n- Read in the `dem_summary.csv` file\n- Use the three methods we discussed to view the data\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_29b8d6c2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n## A Few More Basic `dplyr` Functions\n\n<br>\n\nUse `select()` to choose columns.\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_summary_abbr <- dem_summary |>\n  select(polyarchy, gdp_pc)\n\nglimpse(dem_summary_abbr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6\nColumns: 2\n$ polyarchy <dbl> 0.8709230, 0.6371358, 0.5387451, 0.4076602, 0.3934166, 0.245…\n$ gdp_pc    <dbl> 37.913054, 9.610284, 12.176554, 9.746391, 4.410484, 21.134319\n```\n\n\n:::\n:::\n\n## A Few More Basic `dplyr` Functions\n\nUse `filter()` to choose rows.\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_summary_abbr <- dem_summary |>\n  filter(gdp_pc > 10)\n\nglimpse(dem_summary_abbr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3\nColumns: 5\n$ region    <chr> \"The West\", \"Eastern Europe\", \"Middle East\"\n$ polyarchy <dbl> 0.8709230, 0.5387451, 0.2458892\n$ gdp_pc    <dbl> 37.91305, 12.17655, 21.13432\n$ flfp      <dbl> 52.99082, 50.45894, 26.57872\n$ women_rep <dbl> 28.12921, 17.99728, 10.21568\n```\n\n\n:::\n:::\n\n::: {.callout-note}\nUsing the same name for the data frame results in overwriting the original data frame. If you want to keep the original data frame, use a different name.\n:::\n\n## A Few More Basic `dplyr` Functions\n\nUse `mutate()` to create new columns.\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_summary_abbr <- dem_summary |>\n  mutate(gdp_pc_thousands = gdp_pc * 1000)\n\nglimpse(dem_summary_abbr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6\nColumns: 6\n$ region           <chr> \"The West\", \"Latin America\", \"Eastern Europe\", \"Asia\"…\n$ polyarchy        <dbl> 0.8709230, 0.6371358, 0.5387451, 0.4076602, 0.3934166…\n$ gdp_pc           <dbl> 37.913054, 9.610284, 12.176554, 9.746391, 4.410484, 2…\n$ flfp             <dbl> 52.99082, 48.12645, 50.45894, 50.32171, 56.69530, 26.…\n$ women_rep        <dbl> 28.12921, 21.32548, 17.99728, 14.45225, 17.44296, 10.…\n$ gdp_pc_thousands <dbl> 37913.054, 9610.284, 12176.554, 9746.391, 4410.484, 2…\n```\n\n\n:::\n:::\n\n## Your Turn! \n\n<br>\n\n- Use your new `dplyr` verbs to manipulate the data\n- Select columns, filter rows, and create new columns\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_4273c478\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n## Basic Data Viz with `ggplot2`\n\n<br>\n\n-   `ggplot2` is a powerful data visualization package\n-   It is based on the grammar of graphics\n-   We will talk about this more in depth later\n\n\n## Basic Data Viz with `ggplot2`\n\n- For now, let's make a simple column chart\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nggplot(data = dem_summary, aes(x = region, y = polyarchy)) +\n  geom_col(fill = \"dodgerblue\") \n```\n\n::: {.cell-output-display}\n![](week-2.2_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n## Your Turn! \n\n<br>\n\n- Use `ggplot2` to make a simple column chart\n- Choose a different variable to plot\n- Change the color of the bars\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_2b131f69\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::",
    "supporting": [
      "week-2.2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}