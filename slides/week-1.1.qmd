---
title: Coding Examples
subtitle: No Fear!
date: today
date-format: long
footer: "[DATS 1001 Website](https://ds4all.rocks)"
logo: images/ds4all-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    chalkboard: true
execute:
  echo: false
  message: false
  warning: false
  freeze: auto
---

## Let's get going . . .

<br>

Let's open up the Week 01 module on Posit Cloud...

And work through the examples there.

## Example: Make a map!

```{r}
#| label: leaflet_map

library(leaflet)
leaflet() %>% 
  addTiles() %>%   # Add default OpenStreetMap map tiles
  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, 
             label = "Elliott School of International Affairs")
```

## Example: Make a map!

<br>

```{r}
#| label: leaflet_map2
#| echo: true
#| eval: false
  
library(leaflet)
leaflet() %>% 
  addTiles() %>%   # Add default OpenStreetMap map tiles
  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, 
             label = "Elliott School of International Affairs")
```

```{r}
#| label: timer1

library(countdown)
countdown(minutes = 5, 
          id = "timer0", 
          bottom = "10%",
          right = "10%",
          color_border = "#fff",
          color_text = "#fff",
          color_running_background = "#42affa",
          color_running_text = "black",
          color_finished_background = "#E5D19D",
          color_finished_text = "#00264A")
```

## Plotting Democracy Over Time

```{r}
#| label: plot_democracy

# Load the packages
library(vdemlite)
library(ggplot2)

# Use vdemlite to extract democracy scores for France and INdia
dem_data <- fetchdem(indicators = "v2x_polyarchy",
                     countries = c("FRA", "IND"))

# And now we can plot the data
ggplot(dem_data, aes(y = v2x_polyarchy, x = year, color=country_name)) +
  geom_line() +
  theme_minimal() +
  xlab("Year") +
  ylab("Electoral Democracy Index") +
  ggtitle("Electoral Democracy, 1970-2022") +
  geom_hline(yintercept = .5, linetype = "dashed", color = "grey") +
   scale_color_manual(name="Country", values=c("#E69F00", "#56B4E9")) +
  ylim(0, 1)
```

## Example: Plotting Democracy Over Time

```{r}
#| label: plot_democracy2
#| echo: true
#| eval: false

# Load the packages
library(vdemlite)
library(ggplot2)

# Use vdemlite to extract democracy scores for France and INdia
dem_data <- fetchdem(indicators = "v2x_polyarchy",
                     countries = c("FRA", "IND"))

# And now we can plot the data
ggplot(dem_data, aes(y = v2x_polyarchy, x = year, color=country_name)) +
  geom_line() +
  theme_minimal() +
  xlab("Year") +
  ylab("Electoral Democracy Index") +
  ggtitle("Electoral Democracy, 1970-2022") +
  geom_hline(yintercept = .5, linetype = "dashed", color = "grey") +
   scale_color_manual(name="Country", values=c("#E69F00", "#56B4E9")) +
  ylim(0, 1)
```

```{r}
#| label: timer2

library(countdown)
countdown(minutes = 5, 
          id = "timer2",
          bottom = "0%",
          right = "10%")
```

## Example: UN Voting Trends

```{r}
#| label: un_voting

library(tidyverse)
library(unvotes)
library(lubridate)
library(scales)
library(pacman)

unvotes <- un_votes %>%
  inner_join(un_roll_calls, by = "rcid") %>%
  inner_join(un_roll_call_issues, by = "rcid")

unvotes %>%
  # then filter out to only include the countries we want
  filter(country %in% c("South Africa", "United States", "France")) %>%
  # then make sure R understands the the year variable is a data
  mutate(year = year(date)) %>%
  # Then group the data by country and year
  group_by(country, year, issue) %>%
  # then take the average Yes votes for each country_year
  summarize(percent_yes = mean(vote == "yes")) %>%
  # then make a nice plot
  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE) +
  facet_wrap(~issue) +
  scale_y_continuous(labels = percent) +
  scale_color_manual( values=c("#E69F00", "#56B4E9", "#009E73")) +
  labs(
    title = "Percentage of 'Yes' votes in the UN General Assembly",
    subtitle = "1946 to 2019",
    y = "% Yes",
    x = "Year",
    color = "Country"
  )
```

## Example: UN Voting Trends

```{r}
#| label: un_voting2
#| echo: true
#| eval: false

library(tidyverse)
library(unvotes)
library(lubridate)
library(scales)
library(pacman)

unvotes <- un_votes %>%
  inner_join(un_roll_calls, by = "rcid") %>%
  inner_join(un_roll_call_issues, by = "rcid")

unvotes %>%
  # then filter out to only include the countries we want
  filter(country %in% c("South Africa", "United States", "France")) %>%
  # then make sure R understands the the year variable is a data
  mutate(year = year(date)) %>%
  # Then group the data by country and year
  group_by(country, year, issue) %>%
  # then take the average Yes votes for each country_year
  summarize(percent_yes = mean(vote == "yes")) %>%
  # then make a nice plot
  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE) +
  facet_wrap(~issue) +
  scale_y_continuous(labels = percent) +
  scale_color_manual( values=c("#E69F00", "#56B4E9", "#009E73")) +
  labs(
    title = "Percentage of 'Yes' votes in the UN General Assembly",
    subtitle = "1946 to 2019",
    y = "% Yes",
    x = "Year",
    color = "Country"
  )
```

```{r}
#| label: timer3

library(countdown)
countdown(minutes = 5, 
          id = "timer3",
          bottom = "8",
          right = "10%")
```
